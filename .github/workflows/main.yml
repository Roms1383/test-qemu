name: 'Test QEmu'
on: push

env:
  QEMU_URL: https://github.com/espressif/qemu/releases/download/esp-develop-7.2.0-20230223/esp-qemu-xtensa-softmmu-develop_7.2.0_20230223-x86_64-linux-gnu.tar.bz2
  QEMU_ZIP: esp-qemu-xtensa-softmmu.tar.bz2
  
  #FIRMWARE_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/HelloWorld.ino.bin
  #PARTITION_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/HelloWorld.ino.partitions.bin
  #BOOTLOADER_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/HelloWorld.ino.bootloader.bin
  #SPIFFS_URL: 
  
  FIRMWARE_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.bin
  PARTITION_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.partitions.bin
  BOOTLOADER_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.bootloader.bin
  SPIFFS_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.spiffs.bin
  
  BOOT_APP0_URL: https://github.com/espressif/arduino-esp32/raw/master/tools/partitions/boot_app0.bin

  
  BOOTLOADER_ADDR: "0x1000"
  PARTITIONS_ADDR: "0x8000"
  BOOT_APP0_ADDR: "0xe000"
  FIRMWARE_ADDR: "0x10000"
  SPIFFS_ADDR: "0x290000"
  
  FLASH_SIZE: 4MB

  FIRMWARE_BIN: firmware.bin
  BOOTLOADER_BIN: bootloader.bin
  PARTITIONS_BIN: partitions.bin
  BOOT_APP0_BIN: boot_app0.bin
  SPIFFS_BIN: spiffs.bin
  QEMU_IMAGE_BIN: flash_image.bin
  
  ESPTOOL: ./esptool/esptool.py

jobs:
  qemu:
    runs-on: ubuntu-latest
    steps:
    
      - name: Download QEmu artifacts
        run: |
          wget -q ${{ env.QEMU_URL }} -O ${{ env.QEMU_ZIP }}
          tar -xf ${{ env.QEMU_ZIP }}

      - name: Download bin artifact
        run: |
          wget -q ${{ env.FIRMWARE_URL }} -O ${{ env.FIRMWARE_BIN }}
          wget -q ${{ env.BOOTLOADER_URL }} -O ${{ env.BOOTLOADER_BIN }}
          wget -q ${{ env.PARTITION_URL }} -O ${{ env.PARTITIONS_BIN }}
          wget -q ${{ env.BOOT_APP0_URL }} -O ${{ env.BOOT_APP0_BIN }}
          wget -q ${{ env.SPIFFS_URL }} -O ${{ env.SPIFFS_BIN }}
          
          
      - name: Setup Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Setup pyserial
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pyserial
                      
      - name: Checkout esptool.py
        uses: actions/checkout@v3
        with:
          repository: espressif/esptool
          path: './esptool'
   
      - name: Create firmware for QEmu
        run: |
          ${{ env.ESPTOOL }} --chip esp32 merge_bin --fill-flash-size ${{ env.FLASH_SIZE }} -o ${{ env.QEMU_IMAGE_BIN }} \
            ${{ env.BOOTLOADER_ADDR }} ${{ env.BOOTLOADER_BIN }} \
            ${{ env.PARTITIONS_ADDR }} ${{ env.PARTITIONS_BIN }} \
            ${{ env.BOOT_APP0_ADDR }}  ${{ env.BOOT_APP0_BIN }} \
            ${{ env.FIRMWARE_ADDR }}   ${{ env.FIRMWARE_BIN }} \
            ${{ env.SPIFFS_ADDR }}     ${{ env.SPIFFS_BIN }}
            
      - name: Load firmware in QEmu
        run: |
          (./qemu/bin/qemu-system-xtensa -nographic -no-reboot -machine esp32 -drive file=${{ env.QEMU_IMAGE_BIN }},if=mtd,format=raw) &
          sleep 5
          killall qemu-system-xtensa || true
          
