name: 'Test QEmu'
on: push

env:
  URL_QEMU: https://github.com/espressif/qemu/releases/download/esp-develop-7.2.0-20230223/esp-qemu-xtensa-softmmu-develop_7.2.0_20230223-x86_64-linux-gnu.tar.bz2
  FILENAME_QEMU: esp-qemu-xtensa-softmmu.tar.bz2
  URL_FIRMWARE: https://github.com/tobozo/M5Stack-SD-Updater/releases/download/v1.2.1/M5Core2-AppStore-2.0.4.bin
  FIRMWARE_BIN: firmware.bin
  BIN_ESPTOOL: ./esptool/esptool.py
  URL_ESP32: https://github.com/espressif/arduino-esp32/releases/download/2.0.4/esp32-2.0.4.zip
  FILENAME_ESP32: esp32.zip
  BOOT_APP0_BIN: ./esp32-2.0.4/tools/partitions/boot_app0.bin
  BOOTLOADER_BIN: ./esp32-2.0.4/tools/sdk/esp32/bin/bootloader_qio_80m.bin
  CSV_PARTITION: ./esp32-2.0.4/tools/partitions/minimal.csv
  BIN_ESPTOOL_GEN: ./esp32-2.0.4/tools/gen_esp32part.py

jobs:
  qemu:
    runs-on: ubuntu-latest
    steps:
      - name: Download QEmu artifacts
        run: |
          wget -q ${{ env.URL_QEMU }} -O ${{ env.FILENAME_QEMU }}
          tar -xf ${{ env.FILENAME_QEMU }}
      - name: Download ESP32 artifacts
        run: |
          wget -q ${{ env.URL_ESP32 }} -O ${{ env.FILENAME_ESP32 }}
          unzip -qo ${{ env.FILENAME_ESP32 }}
      - name: Setup Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Download bin artifact
        run: |
          wget -q ${{ env.URL_FIRMWARE }} -O ${{ env.FIRMWARE_BIN }}
      - name: Checkout ESPTool
        uses: actions/checkout@v2
        with:
          repository: espressif/esptool
          path: './esptool'
      - name: Setup Pyserial
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pyserial
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Flash with ESPTool
        run: |
          # gen partition.bin
          ${{ env.BIN_ESPTOOL_GEN }} -q ${{ env.CSV_PARTITION }} partitions.bin
          # gen firmware
          ${{ env.BIN_ESPTOOL }} --chip esp32 merge_bin --fill-flash-size 4MB -o flash_image.bin \
            0x1000 ${{ env.BOOTLOADER_BIN }} \
            0x8000 partitions.bin \
            0xe000 ${{ env.BOOT_APP0_BIN }} \
            0x10000 ${{ env.FIRMWARE_BIN }}
            
      - name: Flash bin artifact
        run: |
          (./qemu/bin/qemu-system-xtensa -nographic -no-reboot -machine esp32 -drive file=flash_image.bin,if=mtd,format=raw) &
          sleep 5
          killall qemu-system-xtensa
          
