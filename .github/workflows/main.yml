name: 'Test QEmu'
on: 
  push:
  workflow_dispatch:
    inputs:
      BASE_URL: 
        description: "Base URL"
        default: "https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz"
      #FIRMWARE_URL: 
      #  description: "app URL"
      #  default: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.bin
      #PARTITION_URL: 
      #  description: "partition URL"
      #  default: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.partitions.bin
      #BOOTLOADER_URL:
      #  description: "bootloader URL"
      #  default: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.bootloader.bin
      #SPIFFS_URL:
      #  description: "spiffs/littlefs URL"
      #  default: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.spiffs.bin
      BOOT_APP0_URL:
        description: "boot_app0 URL"
        default: https://github.com/espressif/arduino-esp32/raw/master/tools/partitions/boot_app0.bin
      BOOTLOADER_ADDR:
        description: "Bootloader Address"
        default: "0x1000"
      PARTITIONS_ADDR:
        description: "Partitions Address"
        default: "0x8000"
      BOOT_APP0_ADDR:
        description: "Boot App0 Address"
        default: "0xe000"
      FIRMWARE_ADDR:
        description: "OTA0 Address"
        default: "0x10000"
      SPIFFS_ADDR:
        description: "SPIFFS Address"
        default: "0x290000"
      FLASH_SIZE:
        description: "Flash Size"
        default: "4MB"
      QEMU_TIMEOUT:
        description: "QEmu timeout"
        default: "60"

jobs:
  qemu:

    env:

      # qemu executable
      QEMU_BIN: ./qemu-git/build/qemu-system-xtensa
      ESPTOOL: ./esptool/esptool.py

      # TODO: move these as dispatchable values

      FIRMWARE_URL: ${{ github.event.inputs.BASE_URL }}.ino.bin
      #FIRMWARE_URL: ${{ github.event.inputs.BASE_URL }}
      PARTITION_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.partitions.bin
      BOOTLOADER_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.ino.bootloader.bin
      SPIFFS_URL: https://github.com/Roms1383/test-qemu/raw/main/.github/workflows/Test_tar_gz_tgz.spiffs.bin
      BOOT_APP0_URL: https://github.com/espressif/arduino-esp32/raw/master/tools/partitions/boot_app0.bin

      BOOTLOADER_ADDR: "0x1000"
      PARTITIONS_ADDR: "0x8000"
      BOOT_APP0_ADDR: "0xe000"
      FIRMWARE_ADDR: "0x10000"
      SPIFFS_ADDR: "0x290000"

      FLASH_SIZE: 4MB
      QEMU_TIMEOUT: 60 # seconds
  
  
    runs-on: ubuntu-latest
    steps:

      - name: üì• Download bin artifact
        run: |
          wget -q ${{ env.FIRMWARE_URL }}   -O firmware.bin
          wget -q ${{ env.BOOTLOADER_URL }} -O bootloader.bin
          wget -q ${{ env.PARTITION_URL }}  -O partitions.bin
          wget -q ${{ env.BOOT_APP0_URL }}  -O boot_app0.bin
          wget -q ${{ env.SPIFFS_URL }}     -O spiffs.bin

      - name: üõÖ Cache QEmu build
        uses: actions/cache@v3
        id: cache-qemu
        with:
          path: './qemu-git'
          key: ${{ runner.os }}-qemu-${{ hashFiles('**/qemu-system-xtensa') }}
          restore-keys: |
            ${{ runner.os }}-qemu-
          
      - name: üì• Checkout qemu-xtensa with flash size fix
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: listout/qemu
          path: './qemu-git'
          ref: 'fix-flash-size'
          
      - name: ‚öíÔ∏è Build QEmu
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
          cd qemu-git
          ./configure --target-list=xtensa-softmmu \
              --enable-gcrypt \
              --enable-debug --enable-sanitizers \
              --disable-strip --disable-user \
              --disable-capstone --disable-vnc \
              --disable-sdl --disable-gtk
          ninja -C build

      - name: ü™° Setup Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: üõÖ Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: ü™° Setup pyserial
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pyserial
                      
      - name: üì• Checkout esptool.py
        uses: actions/checkout@v3
        with:
          repository: espressif/esptool
          path: './esptool'
   
      - name: üè≠ Create firmware for QEmu
        run: |
          ${{ env.ESPTOOL }} --chip esp32 merge_bin --fill-flash-size ${{ env.FLASH_SIZE }} -o flash_image.bin \
            ${{ env.BOOTLOADER_ADDR }} bootloader.bin \
            ${{ env.PARTITIONS_ADDR }} partitions.bin \
            ${{ env.BOOT_APP0_ADDR }}  boot_app0.bin \
            ${{ env.FIRMWARE_ADDR }}   firmware.bin \
            ${{ env.SPIFFS_ADDR }}     spiffs.bin
            
      - name: üïπÔ∏è Load firmware in QEmu
        # qemu-system-xtensa -nographic -no-reboot -machine esp32 -drive file=firmware.bin,if=mtd,format=raw
        run: |
          (${{ env.QEMU_BIN }} -nographic -machine esp32 -drive file=flash_image.bin,if=mtd,format=raw) &
          sleep ${{ env.QEMU_TIMEOUT }}
          killall qemu-system-xtensa || true
          
